/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | "Pacific/Midway"
  | "Pacific/Niue"
  | "Pacific/Honolulu"
  | "Pacific/Rarotonga"
  | "America/Anchorage"
  | "Pacific/Gambier"
  | "America/Los_Angeles"
  | "America/Tijuana"
  | "America/Denver"
  | "America/Phoenix"
  | "America/Chicago"
  | "America/Guatemala"
  | "America/New_York"
  | "America/Bogota"
  | "America/Caracas"
  | "America/Santiago"
  | "America/Buenos_Aires"
  | "America/Sao_Paulo"
  | "Atlantic/South_Georgia"
  | "Atlantic/Azores"
  | "Atlantic/Cape_Verde"
  | "Europe/London"
  | "Europe/Berlin"
  | "Africa/Lagos"
  | "Europe/Athens"
  | "Africa/Cairo"
  | "Europe/Moscow"
  | "Asia/Riyadh"
  | "Asia/Dubai"
  | "Asia/Baku"
  | "Asia/Karachi"
  | "Asia/Tashkent"
  | "Asia/Calcutta"
  | "Asia/Dhaka"
  | "Asia/Almaty"
  | "Asia/Jakarta"
  | "Asia/Bangkok"
  | "Asia/Shanghai"
  | "Asia/Singapore"
  | "Asia/Tokyo"
  | "Asia/Seoul"
  | "Australia/Brisbane"
  | "Australia/Sydney"
  | "Pacific/Guam"
  | "Pacific/Noumea"
  | "Pacific/Auckland"
  | "Pacific/Fiji";

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    "postcard-designs": PostcardDesign;
    users: User;
    postcards: Postcard;
    media: Media;
    templates: Template;
    "payload-locked-documents": PayloadLockedDocument;
    "payload-preferences": PayloadPreference;
    "payload-migrations": PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    "postcard-designs":
      | PostcardDesignsSelect<false>
      | PostcardDesignsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    postcards: PostcardsSelect<false> | PostcardsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    templates: TemplatesSelect<false> | TemplatesSelect<true>;
    "payload-locked-documents":
      | PayloadLockedDocumentsSelect<false>
      | PayloadLockedDocumentsSelect<true>;
    "payload-preferences":
      | PayloadPreferencesSelect<false>
      | PayloadPreferencesSelect<true>;
    "payload-migrations":
      | PayloadMigrationsSelect<false>
      | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: "users";
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "postcard-designs".
 */
export interface PostcardDesign {
  id: number;
  name: string;
  description?: string | null;
  /**
   * GPS latitude coordinate extracted from image EXIF
   */
  latitude?: number | null;
  /**
   * GPS longitude coordinate extracted from image EXIF
   */
  longitude?: number | null;
  /**
   * Location name based on GPS coordinates
   */
  locationName?: string | null;
  /**
   * The original uploaded image
   */
  imageOriginal: number | Media;
  /**
   * The image that will be printed on the card
   */
  frontImage: number | Media;
  /**
   * AI-generated variants of the original image
   */
  imageVariants?: (number | Media)[] | null;
  /**
   * URL of the video if the original upload was a video
   */
  videoUrl?: string | null;
  backgroundColor?: string | null;
  textColor?: string | null;
  font?: ("sans" | "serif" | "handwritten" | "decorative") | null;
  layout?:
    | ("full-image" | "split-horizontal" | "split-vertical" | "border-frame")
    | null;
  defaultMessage?: string | null;
  /**
   * Text overlays to display on the postcard
   */
  overlays?:
    | {
        id: string;
        text: string;
        fontSize?: number | null;
        fontFamily?: ("sans-serif" | "serif" | "cursive" | "display") | null;
        color?: string | null;
        strokeColor?: string | null;
        strokeWidth?: number | null;
        /**
         * X position as percentage (0-100)
         */
        x?: number | null;
        /**
         * Y position as percentage (0-100)
         */
        y?: number | null;
        /**
         * Rotation in degrees
         */
        rotation?: number | null;
        opacity?: number | null;
        textAlign?: ("left" | "center" | "right") | null;
      }[]
    | null;
  category?:
    | ("holiday" | "birthday" | "thankyou" | "greeting" | "travel" | "custom")
    | null;
  isPublic?: boolean | null;
  createdBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  role: "admin" | "user";
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "postcards".
 */
export interface Postcard {
  id: number;
  title: string;
  message?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  recipientName: string;
  recipientAddress: string;
  senderName: string;
  image: number | Media;
  status?: ("draft" | "sent" | "delivered") | null;
  aiGenerated?: boolean | null;
  createdBy: number | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templates".
 */
export interface Template {
  id: number;
  name: string;
  description?: string | null;
  category?:
    | ("holiday" | "birthday" | "thankyou" | "greeting" | "travel")
    | null;
  templateImage?: (number | null) | Media;
  defaultMessage?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: "postcard-designs";
        value: number | PostcardDesign;
      } | null)
    | ({
        relationTo: "users";
        value: number | User;
      } | null)
    | ({
        relationTo: "postcards";
        value: number | Postcard;
      } | null)
    | ({
        relationTo: "media";
        value: number | Media;
      } | null)
    | ({
        relationTo: "templates";
        value: number | Template;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: "users";
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: "users";
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "postcard-designs_select".
 */
export interface PostcardDesignsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  latitude?: T;
  longitude?: T;
  locationName?: T;
  imageOriginal?: T;
  frontImage?: T;
  imageVariants?: T;
  videoUrl?: T;
  backgroundColor?: T;
  textColor?: T;
  font?: T;
  layout?: T;
  defaultMessage?: T;
  overlays?:
    | T
    | {
        id?: T;
        text?: T;
        fontSize?: T;
        fontFamily?: T;
        color?: T;
        strokeColor?: T;
        strokeWidth?: T;
        x?: T;
        y?: T;
        rotation?: T;
        opacity?: T;
        textAlign?: T;
      };
  category?: T;
  isPublic?: T;
  createdBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "postcards_select".
 */
export interface PostcardsSelect<T extends boolean = true> {
  title?: T;
  message?: T;
  recipientName?: T;
  recipientAddress?: T;
  senderName?: T;
  image?: T;
  status?: T;
  aiGenerated?: T;
  createdBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templates_select".
 */
export interface TemplatesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  category?: T;
  templateImage?: T;
  defaultMessage?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}

declare module "payload" {
  export interface GeneratedTypes extends Config {}
}
